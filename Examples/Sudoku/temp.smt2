(declare-datatype Val ((V1 )
(V2 )
(V3 )
(V4 )
(V5 )
(V6 )
(V7 )
(V8 )
(V9 )
)
)
(declare-fun board (Int Int )
Val )
(define-fun valid_index ((i Int )
)
Bool (and (>= i 0 )
(< i 9 )
)
)
(assert (forall ((row Int )
(i Int )
(j Int )
)
(=> (and (not (= i j )
)
(valid_index row )
(valid_index i )
(valid_index j )
)
(not (= (board row i )
(board row j )
)
)
)
)
)
(assert (forall ((col Int )
(i Int )
(j Int )
)
(=> (and (not (= i j )
)
(valid_index col )
(valid_index i )
(valid_index j )
)
(not (= (board i col )
(board j col )
)
)
)
)
)
(assert (forall ((row1 Int )
(col1 Int )
(row2 Int )
(col2 Int )
)
(=> (and (valid_index row1 )
(valid_index col1 )
(valid_index row2 )
(valid_index col2 )
(or (not (= row1 row2 )
)
(not (= col1 col2 )
)
)
(= (div row1 3 )
(div row2 3 )
)
(= (div col1 3 )
(div col2 3 )
)
)
(not (= (board row1 col1 )
(board row2 col2 )
)
)
)
)
)
(assert (= (board 0 0 )
V8 )
)
(assert (= (board 1 2 )
V3 )
)
(assert (= (board 1 3 )
V6 )
)
(assert (= (board 2 1 )
V7 )
)
(assert (= (board 2 4 )
V9 )
)
(assert (= (board 2 6 )
V2 )
)
(assert (= (board 3 1 )
V5 )
)
(assert (= (board 3 5 )
V7 )
)
(assert (= (board 4 4 )
V4 )
)
(assert (= (board 4 5 )
V5 )
)
(assert (= (board 4 6 )
V7 )
)
(assert (= (board 5 3 )
V1 )
)
(assert (= (board 5 7 )
V3 )
)
(assert (= (board 6 2 )
V1 )
)
(assert (= (board 6 7 )
V6 )
)
(assert (= (board 6 8 )
V8 )
)
(assert (= (board 7 2 )
V8 )
)
(assert (= (board 7 3 )
V5 )
)
(assert (= (board 7 7 )
V1 )
)
(assert (= (board 8 1 )
V9 )
)
(assert (= (board 8 6 )
V4 )
)
(check-sat )
(echo "Row:0" )
(get-value ((board 0 0 )
(board 0 1 )
(board 0 2 )
(board 0 3 )
(board 0 4 )
(board 0 5 )
(board 0 6 )
(board 0 7 )
(board 0 8 )
)
)
(echo "Row:1" )
(get-value ((board 1 0 )
(board 1 1 )
(board 1 2 )
(board 1 3 )
(board 1 4 )
(board 1 5 )
(board 1 6 )
(board 1 7 )
(board 1 8 )
)
)
(echo "Row:2" )
(get-value ((board 2 0 )
(board 2 1 )
(board 2 2 )
(board 2 3 )
(board 2 4 )
(board 2 5 )
(board 2 6 )
(board 2 7 )
(board 2 8 )
)
)
(echo "Row:3" )
(get-value ((board 3 0 )
(board 3 1 )
(board 3 2 )
(board 3 3 )
(board 3 4 )
(board 3 5 )
(board 3 6 )
(board 3 7 )
(board 3 8 )
)
)
(echo "Row:4" )
(get-value ((board 4 0 )
(board 4 1 )
(board 4 2 )
(board 4 3 )
(board 4 4 )
(board 4 5 )
(board 4 6 )
(board 4 7 )
(board 4 8 )
)
)
(echo "Row:5" )
(get-value ((board 5 0 )
(board 5 1 )
(board 5 2 )
(board 5 3 )
(board 5 4 )
(board 5 5 )
(board 5 6 )
(board 5 7 )
(board 5 8 )
)
)
(echo "Row:6" )
(get-value ((board 6 0 )
(board 6 1 )
(board 6 2 )
(board 6 3 )
(board 6 4 )
(board 6 5 )
(board 6 6 )
(board 6 7 )
(board 6 8 )
)
)
(echo "Row:7" )
(get-value ((board 7 0 )
(board 7 1 )
(board 7 2 )
(board 7 3 )
(board 7 4 )
(board 7 5 )
(board 7 6 )
(board 7 7 )
(board 7 8 )
)
)
(echo "Row:8" )
(get-value ((board 8 0 )
(board 8 1 )
(board 8 2 )
(board 8 3 )
(board 8 4 )
(board 8 5 )
(board 8 6 )
(board 8 7 )
(board 8 8 )
)
)
(exit )
