; Define the domain of values for each cell
;(declare-datatypes () ((Value (v1) (v2) (v3) (v4) (v5) (v6) (v7) (v8) (v9))))
(declare-datatype Value ( (v1) (v2) (v3) (v4) (v5) (v6) (v7) (v8) (v9)))

; Define the 81 variables representing the cells
(declare-fun c11 () Value)
(declare-fun c12 () Value)
(declare-fun c13 () Value)
(declare-fun c14 () Value)
(declare-fun c15 () Value)
(declare-fun c16 () Value)
(declare-fun c17 () Value)
(declare-fun c18 () Value)
(declare-fun c19 () Value)

(declare-fun c21 () Value)
(declare-fun c22 () Value)
(declare-fun c23 () Value)
(declare-fun c24 () Value)
(declare-fun c25 () Value)
(declare-fun c26 () Value)
(declare-fun c27 () Value)
(declare-fun c28 () Value)
(declare-fun c29 () Value)

(declare-fun c31 () Value)
(declare-fun c32 () Value)
(declare-fun c33 () Value)
(declare-fun c34 () Value)
(declare-fun c35 () Value)
(declare-fun c36 () Value)
(declare-fun c37 () Value)
(declare-fun c38 () Value)
(declare-fun c39 () Value)

(declare-fun c41 () Value)
(declare-fun c42 () Value)
(declare-fun c43 () Value)
(declare-fun c44 () Value)
(declare-fun c45 () Value)
(declare-fun c46 () Value)
(declare-fun c47 () Value)
(declare-fun c48 () Value)
(declare-fun c49 () Value)

(declare-fun c51 () Value)
(declare-fun c52 () Value)
(declare-fun c53 () Value)
(declare-fun c54 () Value)
(declare-fun c55 () Value)
(declare-fun c56 () Value)
(declare-fun c57 () Value)
(declare-fun c58 () Value)
(declare-fun c59 () Value)

(declare-fun c61 () Value)
(declare-fun c62 () Value)
(declare-fun c63 () Value)
(declare-fun c64 () Value)
(declare-fun c65 () Value)
(declare-fun c66 () Value)
(declare-fun c67 () Value)
(declare-fun c68 () Value)
(declare-fun c69 () Value)

(declare-fun c71 () Value)
(declare-fun c72 () Value)
(declare-fun c73 () Value)
(declare-fun c74 () Value)
(declare-fun c75 () Value)
(declare-fun c76 () Value)
(declare-fun c77 () Value)
(declare-fun c78 () Value)
(declare-fun c79 () Value)

(declare-fun c81 () Value)
(declare-fun c82 () Value)
(declare-fun c83 () Value)
(declare-fun c84 () Value)
(declare-fun c85 () Value)
(declare-fun c86 () Value)
(declare-fun c87 () Value)
(declare-fun c88 () Value)
(declare-fun c89 () Value)

(declare-fun c91 () Value)
(declare-fun c92 () Value)
(declare-fun c93 () Value)
(declare-fun c94 () Value)
(declare-fun c95 () Value)
(declare-fun c96 () Value)
(declare-fun c97 () Value)
(declare-fun c98 () Value)
(declare-fun c99 () Value)

; Define the row constraints
(assert (distinct c11 c12 c13 c14 c15 c16 c17 c18 c19))
(assert (distinct c21 c22 c23 c24 c25 c26 c27 c28 c29))
(assert (distinct c31 c32 c33 c34 c35 c36 c37 c38 c39))
(assert (distinct c41 c42 c43 c44 c45 c46 c47 c48 c49))
(assert (distinct c51 c52 c53 c54 c55 c56 c57 c58 c59))
(assert (distinct c61 c62 c63 c64 c65 c66 c67 c68 c69))
(assert (distinct c71 c72 c73 c74 c75 c76 c77 c78 c79))
(assert (distinct c81 c82 c83 c84 c85 c86 c87 c88 c89))
(assert (distinct c91 c92 c93 c94 c95 c96 c97 c98 c99))

; Define the column constraints
(assert (distinct c11 c21 c31 c41 c51 c61 c71 c81 c91))
(assert (distinct c12 c22 c32 c42 c52 c62 c72 c82 c92))
(assert (distinct c13 c23 c33 c43 c53 c63 c73 c83 c93))
(assert (distinct c14 c24 c34 c44 c54 c64 c74 c84 c94))
(assert (distinct c15 c25 c35 c45 c55 c65 c75 c85 c95))
(assert (distinct c16 c26 c36 c46 c56 c66 c76 c86 c96))
(assert (distinct c17 c27 c37 c47 c57 c67 c77 c87 c97))
(assert (distinct c18 c28 c38 c48 c58 c68 c78 c88 c98))
(assert (distinct c19 c29 c39 c49 c59 c69 c79 c89 c99))

; Define the 3x3 box constraints
(assert (distinct c11 c12 c13 c21 c22 c23 c31 c32 c33))
(assert (distinct c14 c15 c16 c24 c25 c26 c34 c35 c36))
(assert (distinct c17 c18 c19 c27 c28 c29 c37 c38 c39))
(assert (distinct c41 c42 c43 c51 c52 c53 c61 c62 c63))
(assert (distinct c44 c45 c46 c54 c55 c56 c64 c65 c66))
(assert (distinct c47 c48 c49 c57 c58 c59 c67 c68 c69))
(assert (distinct c71 c72 c73 c81 c82 c83 c91 c92 c93))
(assert (distinct c74 c75 c76 c84 c85 c86 c94 c95 c96))
(assert (distinct c77 c78 c79 c87 c88 c89 c97 c98 c99))

(check-sat)
(get-model)